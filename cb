#!/usr/bin/env python3
"""
CulturaBuilder CLI Wrapper
Fornece autocomplete nativo para comandos /cb:
"""

import sys
import subprocess
import argparse
from typing import List

# Comandos dispon√≠veis
COMMANDS = {
    'build': 'Construir componentes do projeto',
    'analyze': 'Analisar c√≥digo e arquitetura',
    'deploy': 'Deploy com rollback autom√°tico',
    'improve': 'Melhorar qualidade do c√≥digo',
    'metrics': 'Visualizar m√©tricas de uso',
    'test': 'Executar testes com cobertura',
    'document': 'Gerar documenta√ß√£o bil√≠ngue',
    'workflow': 'Gerenciar workflows complexos',
    'ai': 'Assistente IA para otimiza√ß√µes',
    'learn': 'Sistema de aprendizado interativo',
    'git': 'Gerenciamento Git bil√≠ngue',
    'scaffold': 'Criar estrutura de projetos',
    'refactor': 'Refatorar c√≥digo',
    'security': 'Auditoria de seguran√ßa',
    'performance': 'Otimiza√ß√£o de performance',
    'config': 'Configura√ß√µes do CulturaBuilder',
    'help': 'Mostrar ajuda'
}

def execute_command(command: str, args: List[str]):
    """Execute command via Claude Code"""
    full_command = f"/cb:{command}"
    if args:
        full_command += " " + " ".join(args)
    
    print(f"üåü Executando: {full_command}")
    
    # Send to Claude Code via pipe
    process = subprocess.Popen(
        ['claude'],
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )
    
    stdout, stderr = process.communicate(input=full_command)
    
    if stdout:
        print(stdout)
    if stderr:
        print(stderr, file=sys.stderr)
    
    return process.returncode

def main():
    parser = argparse.ArgumentParser(
        description='üåü CulturaBuilder CLI - Construa cultura atrav√©s de tecnologia',
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
Exemplos:
  cb build frontend         # Construir frontend
  cb analyze --deep         # An√°lise profunda
  cb metrics --summary      # Ver m√©tricas
  cb help                   # Mostrar ajuda

Comandos dispon√≠veis:
""" + "\n".join(f"  {cmd:12} - {desc}" for cmd, desc in COMMANDS.items())
    )
    
    parser.add_argument(
        'command',
        choices=COMMANDS.keys(),
        help='Comando CulturaBuilder para executar'
    )
    
    parser.add_argument(
        'args',
        nargs='*',
        help='Argumentos para o comando'
    )
    
    parser.add_argument(
        '--lang',
        choices=['pt-BR', 'en-US'],
        default='pt-BR',
        help='Idioma de sa√≠da (padr√£o: pt-BR)'
    )
    
    args = parser.parse_args()
    
    # Add language flag if specified
    command_args = args.args
    if args.lang != 'pt-BR':
        command_args.append(f'--lang={args.lang}')
    
    # Execute command
    return execute_command(args.command, command_args)

if __name__ == '__main__':
    sys.exit(main())